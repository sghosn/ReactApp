{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\downloads\\\\PersonalProject\\\\ReactApp\\\\ReactApp\\\\frontend\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport { Fragment } from 'react';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport firebase from 'firebase';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./redux/reducers\";\nimport thunk from 'redux-thunk';\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nvar firebaseConfig = {\n  apiKey: \"AIzaSyD6BkglJA3KJ4kRaiqCR9V-SSr1JXTUSKw\",\n  authDomain: \"app-project-7328c.firebaseapp.com\",\n  projectId: \"app-project-7328c\",\n  storageBucket: \"app-project-7328c.appspot.com\",\n  messagingSenderId: \"860281315244\",\n  appId: \"1:860281315244:web:68f400bc9c83874330e409\",\n  measurementId: \"G-6DY6W4MMSR\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport { NavigationContainer, NavigationHelpersContext } from '@react-navigation/native';\nimport LandingScreen from \"./components/auth/Landing\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport RegisterScreen from \"./components/auth/Register\";\nimport LoginScreen from \"./components/auth/Login\";\nimport MainScreen from \"./components/main\";\nimport MainTestScreen from \"./components/maintest\";\nimport { createDrawerNavigator, DrawerActions } from '@react-navigation/drawer';\nimport FeedScreen from \"./components/main/Feed\";\nimport ProfileScreen from \"./components/main/Profile\";\nimport AddScreen from \"./components/main/Add\";\nimport SettingScreen from \"./components/main/Settings\";\nimport NotificationScreen from \"./components/main/Notification\";\nimport SaveScreen from \"./components/main/Save\";\nimport SaveProfileScreen from \"./components/main/SaveProfile\";\nimport CommentScreen from \"./components/main/Comment\";\nvar Drawer = createDrawerNavigator();\nvar Stack = createStackNavigator();\n\nvar MainStackNavigator = function MainStackNavigator(navigation) {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Main\",\n    screenOptions: function screenOptions(props) {\n      var toggleDrawer = props.navigation.toggleDrawer;\n      return {\n        headerRight: function headerRight(_ref) {\n          var color = _ref.color,\n              size = _ref.size;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"cog-outline\",\n            color: color,\n            size: 26,\n            size: 30,\n            style: {\n              flexDirection: \"row\",\n              paddingRight: 15\n            },\n            onPress: function onPress() {\n              toggleDrawer();\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: MainScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Add\",\n    component: AddScreen,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Save\",\n    component: SaveScreen,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Comment\",\n    component: CommentScreen,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SaveProfile\",\n    component: SaveProfileScreen,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar TestNavigator = function TestNavigator(navigation) {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Notification\",\n    screenOptions: function screenOptions(props) {\n      var toggleDrawer = props.navigation.toggleDrawer;\n      return {\n        headerRight: function headerRight(_ref2) {\n          var color = _ref2.color,\n              size = _ref2.size;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"cog-outline\",\n            color: color,\n            size: 26,\n            size: 30,\n            style: {\n              flexDirection: \"row\",\n              paddingRight: 15\n            },\n            onPress: function onPress() {\n              toggleDrawer();\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Notification\",\n    component: MainTestScreen,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Main2\",\n    component: MainTestScreen,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Add\",\n    component: AddScreen,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SaveProfile\",\n    component: SaveProfileScreen,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Settings\",\n    component: SettingScreen,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Comment\",\n    component: CommentScreen,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    navigation: navigation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this2;\n\n    _classCallCheck(this, App);\n\n    _this2 = _super.call(this, props);\n    _this2.state = {\n      loaded: false\n    };\n    return _this2;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this3.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this3.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }\n        }, \"Loading\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Landing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 6\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 8\n        }\n      }, React.createElement(Drawer.Navigator, {\n        initialRouteName: \"Main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }\n      }, React.createElement(Drawer.Screen, {\n        name: \"Main\",\n        component: MainStackNavigator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }), React.createElement(Drawer.Screen, {\n        name: \"Test\",\n        component: TestNavigator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["D:/downloads/PersonalProject/ReactApp/ReactApp/frontend/App.js"],"names":["StatusBar","React","Component","Fragment","MaterialCommunityIcons","firebase","Provider","createStore","applyMiddleware","rootReducer","thunk","store","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","NavigationContainer","NavigationHelpersContext","LandingScreen","createStackNavigator","RegisterScreen","LoginScreen","MainScreen","MainTestScreen","createDrawerNavigator","DrawerActions","FeedScreen","ProfileScreen","AddScreen","SettingScreen","NotificationScreen","SaveScreen","SaveProfileScreen","CommentScreen","Drawer","Stack","MainStackNavigator","navigation","props","toggleDrawer","headerRight","color","size","flexDirection","paddingRight","TestNavigator","App","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","flex","justifyContent","headerShown"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { Component } from 'react';\r\nimport {Fragment} from 'react'\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\r\n\r\n/*\r\nUSE ENVIRONMENTAL VARIABLES TO HIDE IN THE FUTURE\r\n*/\r\nimport { View, Text } from 'react-native'\r\nimport firebase from 'firebase'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from './redux/reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD6BkglJA3KJ4kRaiqCR9V-SSr1JXTUSKw\",\r\n  authDomain: \"app-project-7328c.firebaseapp.com\",\r\n  projectId: \"app-project-7328c\",\r\n  storageBucket: \"app-project-7328c.appspot.com\",\r\n  messagingSenderId: \"860281315244\",\r\n  appId: \"1:860281315244:web:68f400bc9c83874330e409\",\r\n  measurementId: \"G-6DY6W4MMSR\"\r\n};\r\n\r\nif(firebase.apps.length === 0) {\r\n  firebase.initializeApp(firebaseConfig)\r\n\r\n}\r\n\r\nimport { NavigationContainer, NavigationHelpersContext } from '@react-navigation/native';\r\nimport LandingScreen from './components/auth/Landing'\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport RegisterScreen from './components/auth/Register'\r\nimport LoginScreen from './components/auth/Login'\r\nimport MainScreen from './components/main'\r\nimport MainTestScreen from './components/maintest'\r\nimport { createDrawerNavigator, DrawerActions } from '@react-navigation/drawer';\r\n\r\nimport FeedScreen from './components/main/Feed'\r\nimport ProfileScreen from './components/main/Profile'\r\nimport AddScreen from './components/main/Add'\r\nimport SettingScreen from './components/main/Settings'\r\nimport NotificationScreen from './components/main/Notification'\r\nimport SaveScreen from './components/main/Save'\r\nimport SaveProfileScreen from './components/main/SaveProfile'\r\nimport CommentScreen from './components/main/Comment'\r\n\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst Stack = createStackNavigator();\r\nconst MainStackNavigator = (navigation) => {\r\n  return (\r\n      <Stack.Navigator initialRouteName=\"Main\" screenOptions={props => {\r\n        const { toggleDrawer } = props.navigation\r\n        return {\r\n          headerRight: ({ color, size }) => (\r\n            <MaterialCommunityIcons name=\"cog-outline\" color={color} size={26} size={30}\r\n            style={{ flexDirection:\"row\", paddingRight: 15 }}\r\n            onPress={() => { toggleDrawer()}}/>\r\n          )\r\n        }\r\n      }\r\n      \r\n      }>\r\n      <Stack.Screen name=\"Main\" component={MainScreen} />\r\n        <Stack.Screen name=\"Add\" component={AddScreen} navigation={navigation} />\r\n        <Stack.Screen name=\"Save\" component={SaveScreen} navigation={navigation}  />\r\n        <Stack.Screen name=\"Comment\" component={CommentScreen} navigation={navigation}  />\r\n        <Stack.Screen name=\"Profile\" component={ProfileScreen} navigation={navigation}  />\r\n        <Stack.Screen name=\"SaveProfile\" component={SaveProfileScreen} navigation={navigation}  />\r\n      </Stack.Navigator>\r\n  )\r\n}\r\n\r\nconst TestNavigator = (navigation) => {\r\n  return (\r\n      <Stack.Navigator initialRouteName=\"Notification\" screenOptions={props => {\r\n        const { toggleDrawer } = props.navigation\r\n        return {\r\n          headerRight: ({ color, size }) => (\r\n            <MaterialCommunityIcons name=\"cog-outline\" color={color} size={26} size={30}\r\n            style={{ flexDirection:\"row\", paddingRight: 15 }}\r\n            onPress={() => { toggleDrawer()}}/>\r\n          )\r\n        }\r\n      }\r\n      \r\n      }>\r\n      <Stack.Screen name=\"Notification\" component={MainTestScreen} navigation={navigation} />\r\n        <Stack.Screen name=\"Main2\" component={MainTestScreen} navigation={navigation} />\r\n        <Stack.Screen name=\"Add\" component={AddScreen} navigation={navigation} />\r\n        <Stack.Screen name=\"SaveProfile\" component={SaveProfileScreen} navigation={navigation}  />\r\n        <Stack.Screen name=\"Settings\" component={SettingScreen} navigation={navigation}  />\r\n        <Stack.Screen name=\"Comment\" component={CommentScreen} navigation={navigation}  />\r\n        <Stack.Screen name=\"Profile\" component={ProfileScreen} navigation={navigation}  />\r\n\r\n      </Stack.Navigator>\r\n  )\r\n}\r\nexport class App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      loaded: false,\r\n    }\r\n  }\r\n  \r\n\r\n  componentDidMount(){\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if(!user){\r\n        this.setState({\r\n          loggedIn: false,\r\n          loaded: true,\r\n        })\r\n      } else {\r\n        this.setState({\r\n          loggedIn: true,\r\n          loaded: true,\r\n        })\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    const { loggedIn, loaded } = this.state;\r\n    if(!loaded) {\r\n      return(\r\n        <View style={{ flex: 1, justifyContent: 'center' }}>\r\n          <Text>Loading</Text>\r\n        </View>\r\n\r\n      )\r\n    }\r\n\r\n    if(!loggedIn){\r\n    return (\r\n        <NavigationContainer>\r\n            <Stack.Navigator initialRouteName=\"Landing\">\r\n              <Stack.Screen name=\"Landing\" component={LandingScreen} options={{ headerShown: false }}/>\r\n              <Stack.Screen name=\"Register\" component={RegisterScreen}/>\r\n              <Stack.Screen name=\"Login\" component={LoginScreen}/>\r\n            </Stack.Navigator>\r\n            \r\n        </NavigationContainer>\r\n      );\r\n   }\r\n\r\n   return (\r\n     <Provider store={store}>\r\n       <NavigationContainer>\r\n      <Drawer.Navigator initialRouteName=\"Main\">\r\n        <Drawer.Screen name=\"Main\" component={MainStackNavigator} />\r\n        <Drawer.Screen name=\"Test\" component={TestNavigator} />\r\n      </Drawer.Navigator>\r\n    </NavigationContainer>\r\n     </Provider>\r\n   )\r\n  }\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}