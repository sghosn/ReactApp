{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\downloads\\\\PersonalProject\\\\ReactApp\\\\ReactApp\\\\frontend\\\\components\\\\main\\\\Profile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Statusbar } from \"react-native-web/dist/index\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { TabView, TabBar } from 'react-native-tab-view';\nimport Constants from 'expo-constants';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nvar TabBarHeight = 48;\nvar HeaderHeight = 300;\nvar tab1ItemSize = (Dimensions.get('window').width - 30) / 2;\nvar tab2ItemSize = (Dimensions.get('window').width - 40) / 3;\n\nfunction Profile(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      userPosts = _useState2[0],\n      setUserPosts = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      following = _useState6[0],\n      setFollowing = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      refresh = _useState8[0],\n      setRefresh = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      image = _useState12[0],\n      setImage = _useState12[1];\n\n  var fetchData = function fetchData() {\n    var currentUser = props.currentUser,\n        posts = props.posts;\n\n    if (props.route.params.uid === firebase.auth().currentUser.uid) {\n      setUser(currentUser);\n      setUserPosts(posts);\n    } else {\n      firebase.firestore().collection(\"users\").doc(props.route.params.uid).get().then(function (snapshot) {\n        if (snapshot.exists) {\n          setUser(snapshot.data());\n        } else {\n          console.log('does not exist');\n        }\n      });\n      firebase.firestore().collection(\"posts\").doc(props.route.params.uid).collection(\"userPosts\").orderBy(\"captioncreation\", \"asc\").get().then(function (snapshot) {\n        var posts = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        setUserPosts(posts);\n      });\n    }\n\n    if (props.following.indexOf(props.route.params.uid) > -1) {\n      setFollowing(true);\n    } else {\n      setFollowing(false);\n    }\n  };\n\n  var fetchRefreshData = function fetchRefreshData() {\n    console.log(\"test\");\n    var currentUser = props.currentUser,\n        posts = props.posts;\n    setLoading(true);\n    console.log(\"Test\");\n    firebase.firestore().collection(\"users\").doc(props.route.params.uid).get().then(function (snapshot) {\n      if (snapshot.exists) {\n        setUser(snapshot.data());\n      } else {\n        console.log('does not exist');\n      }\n    });\n    firebase.firestore().collection(\"posts\").doc(props.route.params.uid).collection(\"userPosts\").orderBy(\"captioncreation\", \"asc\").get().then(function (snapshot) {\n      var posts = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setUserPosts(posts);\n    });\n\n    if (props.following.indexOf(props.route.params.uid) > -1) {\n      setFollowing(true);\n    } else {\n      setFollowing(false);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(function () {\n    if (loading === true && refresh === false) {\n      fetchData();\n    } else {\n      setRefresh(true);\n      fetchRefreshData();\n    }\n\n    setRefresh(true);\n    setLoading(false);\n  }, [routes, tabIndex, props.route.params.uid, props.following]);\n\n  var TabScene = function TabScene(_ref) {\n    var numCols = _ref.numCols,\n        data = _ref.data,\n        renderItem = _ref.renderItem,\n        onGetRef = _ref.onGetRef,\n        scrollY = _ref.scrollY,\n        onScrollEndDrag = _ref.onScrollEndDrag,\n        onMomentumScrollEnd = _ref.onMomentumScrollEnd,\n        onMomentumScrollBegin = _ref.onMomentumScrollBegin;\n    var windowHeight = Dimensions.get('window').height;\n    return React.createElement(Animated.FlatList, {\n      scrollToOverflowEnabled: true,\n      numColumns: numCols,\n      ref: onGetRef,\n      scrollEventThrottle: 16,\n      onScroll: Animated.event([{\n        nativeEvent: {\n          contentOffset: {\n            y: scrollY\n          }\n        }\n      }], {\n        useNativeDriver: true\n      }),\n      onMomentumScrollBegin: onMomentumScrollBegin,\n      onScrollEndDrag: onScrollEndDrag,\n      onMomentumScrollEnd: onMomentumScrollEnd,\n      ItemSeparatorComponent: function ItemSeparatorComponent() {\n        return React.createElement(View, {\n          style: {\n            height: 10\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 43\n          }\n        });\n      },\n      ListHeaderComponent: function ListHeaderComponent() {\n        return React.createElement(View, {\n          style: {\n            height: 10\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 40\n          }\n        });\n      },\n      contentContainerStyle: {\n        paddingTop: HeaderHeight + TabBarHeight,\n        paddingHorizontal: 10,\n        minHeight: windowHeight - TabBarHeight\n      },\n      showsHorizontalScrollIndicator: false,\n      data: data,\n      renderItem: renderItem,\n      showsVerticalScrollIndicator: false,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      refreshing: loading,\n      onRefresh: function onRefresh() {\n        return fetchRefreshData();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    });\n  };\n\n  var onFollow = function onFollow() {\n    firebase.firestore().collection(\"following\").doc(firebase.auth().currentUser.uid).collection(\"userFollowing\").doc(props.route.params.uid).set({});\n  };\n\n  var onUnFollow = function onUnFollow() {\n    firebase.firestore().collection(\"following\").doc(firebase.auth().currentUser.uid).collection(\"userFollowing\").doc(props.route.params.uid).delete();\n  };\n\n  var onLogout = function onLogout() {\n    firebase.auth().signOut();\n  };\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      tabIndex = _useState14[0],\n      setIndex = _useState14[1];\n\n  var _useState15 = useState([{\n    key: 'tab1',\n    title: 'Tab1'\n  }, {\n    key: 'tab2',\n    title: 'Tab2'\n  }]),\n      _useState16 = _slicedToArray(_useState15, 1),\n      routes = _useState16[0];\n\n  var _useState17 = useState(Array(30).fill(0)),\n      _useState18 = _slicedToArray(_useState17, 1),\n      tab2Data = _useState18[0];\n\n  var scrollY = useRef(new Animated.Value(0)).current;\n  var listRefArr = useRef([]);\n  var listOffset = useRef({});\n  var isListGliding = useRef(false);\n  useEffect(function () {\n    scrollY.addListener(function (_ref2) {\n      var value = _ref2.value;\n      var curRoute = routes[tabIndex].key;\n      listOffset.current[curRoute] = value;\n    });\n    return function () {\n      scrollY.removeAllListeners();\n    };\n  }, [routes, tabIndex]);\n\n  var syncScrollOffset = function syncScrollOffset() {\n    var curRouteKey = routes[tabIndex].key;\n    listRefArr.current.forEach(function (item) {\n      if (item.key !== curRouteKey) {\n        if (scrollY._value < HeaderHeight && scrollY._value >= 0) {\n          if (item.value) {\n            item.value.scrollToOffset({\n              offset: scrollY._value,\n              animated: false\n            });\n            listOffset.current[item.key] = scrollY._value;\n          }\n        } else if (scrollY._value >= HeaderHeight) {\n          if (listOffset.current[item.key] < HeaderHeight || listOffset.current[item.key] == null) {\n            if (item.value) {\n              item.value.scrollToOffset({\n                offset: HeaderHeight,\n                animated: false\n              });\n              listOffset.current[item.key] = HeaderHeight;\n            }\n          }\n        }\n      }\n    });\n  };\n\n  var onMomentumScrollBegin = function onMomentumScrollBegin() {\n    isListGliding.current = true;\n  };\n\n  var onMomentumScrollEnd = function onMomentumScrollEnd() {\n    isListGliding.current = false;\n    syncScrollOffset();\n  };\n\n  var onScrollEndDrag = function onScrollEndDrag() {\n    syncScrollOffset();\n  };\n\n  var renderHeader = function renderHeader() {\n    var y = scrollY.interpolate({\n      inputRange: [0, HeaderHeight],\n      outputRange: [0, -HeaderHeight],\n      extrapolateRight: 'clamp'\n    });\n    return React.createElement(Animated.View, {\n      style: [styles.header, {\n        transform: [{\n          translateY: y\n        }]\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      style: styles.profileImage,\n      source: {\n        uri: user.profilePic\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 15\n      }\n    })), React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, user.email), props.route.params.uid !== firebase.auth().currentUser.uid ? React.createElement(View, {\n      style: styles.buttonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }\n    }, following ? React.createElement(Button, {\n      title: \"Following\",\n      onPress: function onPress() {\n        return onUnFollow();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 29\n      }\n    }) : React.createElement(Button, {\n      title: \"Follow\",\n      onPress: function onPress() {\n        return onFollow();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 29\n      }\n    })) : React.createElement(View, {\n      style: styles.buttonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 19\n      }\n    }, React.createElement(Button, {\n      title: \"Logout\",\n      onPress: function onPress() {\n        return onLogout();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }\n    }), React.createElement(Button, {\n      title: \"Change Profile Pic\",\n      onPress: function onPress() {\n        return props.navigation.navigate('Settings', {\n          image: image\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }\n    }))));\n  };\n\n  var rednerTab1Item = function rednerTab1Item(_ref3) {\n    var item = _ref3.item;\n    return React.createElement(View, {\n      style: styles.containerImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: styles.image,\n      source: {\n        uri: item.downloadURL\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  var rednerTab2Item = function rednerTab2Item(_ref4) {\n    var item = _ref4.item,\n        index = _ref4.index;\n    return React.createElement(View, {\n      style: {\n        marginLeft: index % 3 === 0 ? 0 : 10,\n        borderRadius: 16,\n        width: tab2ItemSize,\n        height: tab2ItemSize,\n        backgroundColor: '#aaa',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 15\n      }\n    }, index));\n  };\n\n  var renderLabel = function renderLabel(_ref5) {\n    var route = _ref5.route,\n        focused = _ref5.focused;\n    return React.createElement(Text, {\n      style: [styles.label, {\n        opacity: focused ? 1 : 0.5\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }\n    }, route.title);\n  };\n\n  var renderScene = function renderScene(_ref6) {\n    var route = _ref6.route;\n    var focused = route.key === routes[tabIndex].key;\n    var numCols;\n    var data;\n    var renderItem;\n\n    switch (route.key) {\n      case 'tab1':\n        numCols = 0;\n        data = userPosts;\n        renderItem = rednerTab1Item;\n        break;\n\n      case 'tab2':\n        numCols = 3;\n        data = tab2Data;\n        renderItem = rednerTab2Item;\n        break;\n\n      default:\n        return null;\n    }\n\n    return React.createElement(TabScene, {\n      numCols: numCols,\n      data: data,\n      renderItem: renderItem,\n      scrollY: scrollY,\n      onMomentumScrollBegin: onMomentumScrollBegin,\n      onScrollEndDrag: onScrollEndDrag,\n      onMomentumScrollEnd: onMomentumScrollEnd,\n      onGetRef: function onGetRef(ref) {\n        if (ref) {\n          var found = listRefArr.current.find(function (e) {\n            return e.key === route.key;\n          });\n\n          if (!found) {\n            listRefArr.current.push({\n              key: route.key,\n              value: ref\n            });\n          }\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }\n    });\n  };\n\n  var renderTabBar = function renderTabBar(props) {\n    var y = scrollY.interpolate({\n      inputRange: [0, HeaderHeight],\n      outputRange: [HeaderHeight, 0],\n      extrapolateRight: 'clamp'\n    });\n    return React.createElement(Animated.View, {\n      style: {\n        top: 0,\n        zIndex: 1,\n        position: 'absolute',\n        transform: [{\n          translateY: y\n        }],\n        width: '100%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 13\n      }\n    }, React.createElement(TabBar, _extends({}, props, {\n      onTabPress: function onTabPress(_ref7) {\n        var route = _ref7.route,\n            preventDefault = _ref7.preventDefault;\n\n        if (isListGliding.current) {\n          preventDefault();\n        }\n      },\n      style: styles.tab,\n      renderLabel: renderLabel,\n      indicatorStyle: styles.indicator,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 15\n      }\n    })));\n  };\n\n  var renderTabView = function renderTabView() {\n    return React.createElement(TabView, {\n      onIndexChange: function onIndexChange(index) {\n        return setIndex(index);\n      },\n      navigationState: {\n        index: tabIndex,\n        routes: routes\n      },\n      renderScene: renderScene,\n      renderTabBar: renderTabBar,\n      initialLayout: {\n        height: 0,\n        width: Dimensions.get('window').width\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 13\n      }\n    });\n  };\n\n  if (user === null) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 13\n    }\n  }, renderTabView(), renderHeader());\n  React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.containerInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 17\n    }\n  }, user.email), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 17\n    }\n  }, user.email), props.route.params.uid !== firebase.auth().currentUser.uid ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 21\n    }\n  }, following ? React.createElement(Button, {\n    title: \"Following\",\n    onPress: function onPress() {\n      return onUnFollow();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 29\n    }\n  }) : React.createElement(Button, {\n    title: \"Follow\",\n    onPress: function onPress() {\n      return onFollow();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 29\n    }\n  })) : React.createElement(Button, {\n    title: \"Logout\",\n    onPress: function onPress() {\n      return onLogout();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.containerGallery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 3,\n    horizontal: false,\n    data: userPosts,\n    renderItem: function renderItem(_ref8) {\n      var item = _ref8.item;\n      return React.createElement(View, {\n        style: styles.containerImage,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 29\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  profileImage: {\n    height: 150,\n    width: 150,\n    justifyContent: 'center',\n    alignItems: 'center',\n    resizeMode: 'contain',\n    flex: 1,\n    marginBottom: 50\n  },\n  container: {\n    marginTop: -90\n  },\n  containerGallery: {\n    flex: 1\n  },\n  containerImage: {\n    flex: 1 / 3\n  },\n  image: {\n    flex: 1,\n    aspectRatio: 1 / 1\n  },\n  buttonContainer: {\n    marginBottom: 40\n  },\n  header: {\n    top: 0,\n    height: HeaderHeight,\n    width: '100%',\n    backgroundColor: '#40C4FF',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute'\n  },\n  label: {\n    fontSize: 16,\n    color: '#222'\n  },\n  tab: {\n    elevation: 0,\n    shadowOpacity: 0,\n    backgroundColor: '#FFCC80'\n  },\n  indicator: {\n    backgroundColor: '#222'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    posts: store.userState.posts,\n    following: store.userState.following\n  };\n};\n\nexport default connect(mapStateToProps, null)(Profile);","map":{"version":3,"sources":["D:/downloads/PersonalProject/ReactApp/ReactApp/frontend/components/main/Profile.js"],"names":["React","useState","useEffect","useRef","Statusbar","TabView","TabBar","Constants","connect","firebase","require","TabBarHeight","HeaderHeight","tab1ItemSize","Dimensions","get","width","tab2ItemSize","Profile","props","userPosts","setUserPosts","user","setUser","following","setFollowing","refresh","setRefresh","loading","setLoading","image","setImage","fetchData","currentUser","posts","route","params","uid","auth","firestore","collection","doc","then","snapshot","exists","data","console","log","orderBy","docs","map","id","indexOf","fetchRefreshData","routes","tabIndex","TabScene","numCols","renderItem","onGetRef","scrollY","onScrollEndDrag","onMomentumScrollEnd","onMomentumScrollBegin","windowHeight","height","Animated","event","nativeEvent","contentOffset","y","useNativeDriver","paddingTop","paddingHorizontal","minHeight","item","index","toString","onFollow","set","onUnFollow","delete","onLogout","signOut","setIndex","key","title","Array","fill","tab2Data","Value","current","listRefArr","listOffset","isListGliding","addListener","value","curRoute","removeAllListeners","syncScrollOffset","curRouteKey","forEach","_value","scrollToOffset","offset","animated","renderHeader","interpolate","inputRange","outputRange","extrapolateRight","styles","header","transform","translateY","profileImage","uri","profilePic","container","email","buttonContainer","navigation","navigate","rednerTab1Item","containerImage","downloadURL","rednerTab2Item","marginLeft","borderRadius","backgroundColor","justifyContent","alignItems","renderLabel","focused","label","opacity","renderScene","ref","found","find","e","push","renderTabBar","top","zIndex","position","preventDefault","tab","indicator","renderTabView","flex","containerInfo","containerGallery","StyleSheet","create","resizeMode","marginBottom","marginTop","aspectRatio","fontSize","color","elevation","shadowOpacity","mapStateToProps","store","userState"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef } from 'react'\r\nimport { StyleSheet, View, Text, Image, Button, FlatList, StatusBar, Dimensions, SafeAreaView, Animated, PanResponder, Platform, TouchableOpacity, Alert, Statusbar, ActivityIndicator, } from 'react-native'\r\nimport { TabView, TabBar } from 'react-native-tab-view';\r\nimport Constants from 'expo-constants'\r\nimport { connect } from 'react-redux'\r\nimport firebase from 'firebase';\r\nrequire('firebase/firestore')\r\n\r\nconst TabBarHeight = 48;\r\nconst HeaderHeight = 300;\r\nconst tab1ItemSize = (Dimensions.get('window').width - 30) / 2;\r\nconst tab2ItemSize = (Dimensions.get('window').width - 40) / 3;\r\n\r\nfunction Profile(props) {\r\n\r\n    const [userPosts, setUserPosts] = useState([]);\r\n    const [user, setUser] = useState(null);\r\n    const [following, setFollowing] = useState(false);\r\n    const [refresh, setRefresh] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [image, setImage] = useState(null);\r\n\r\n    const fetchData = () => {\r\n      const { currentUser, posts } = props;\r\n\r\n      if(props.route.params.uid === firebase.auth().currentUser.uid){\r\n          setUser(currentUser)\r\n          setUserPosts(posts)\r\n      } else {\r\n          firebase.firestore()\r\n          .collection(\"users\")\r\n          .doc(props.route.params.uid)\r\n          .get()\r\n          .then((snapshot) => {\r\n              if(snapshot.exists){\r\n                  setUser(snapshot.data())\r\n              }\r\n              else {\r\n                  console.log('does not exist')\r\n              }\r\n          })\r\n          firebase.firestore()\r\n          .collection(\"posts\")\r\n          .doc(props.route.params.uid)\r\n          .collection(\"userPosts\")\r\n          .orderBy(\"captioncreation\", \"asc\")\r\n          .get()\r\n          .then((snapshot) => {\r\n              let posts = snapshot.docs.map(doc => {\r\n                  const data = doc.data();\r\n                  const id = doc.id;\r\n                  return { id, ...data }\r\n              })\r\n              setUserPosts(posts)\r\n          })\r\n      }\r\n\r\n      if(props.following.indexOf(props.route.params.uid) > -1)\r\n          {\r\n              setFollowing(true);\r\n\r\n          } else {\r\n              setFollowing(false);\r\n          }\r\n    }\r\n    const fetchRefreshData = () => {\r\n      console.log(\"test\");\r\n      const { currentUser, posts } = props;\r\n          setLoading(true)\r\n          console.log(\"Test\")\r\n          firebase.firestore()\r\n          .collection(\"users\")\r\n          .doc(props.route.params.uid)\r\n          .get()\r\n          .then((snapshot) => {\r\n              if(snapshot.exists){\r\n                  setUser(snapshot.data())\r\n              }\r\n              else {\r\n                  console.log('does not exist')\r\n              }\r\n          })\r\n          firebase.firestore()\r\n          .collection(\"posts\")\r\n          .doc(props.route.params.uid)\r\n          .collection(\"userPosts\")\r\n          .orderBy(\"captioncreation\", \"asc\")\r\n          .get()\r\n          .then((snapshot) => {\r\n              let posts = snapshot.docs.map(doc => {\r\n                  const data = doc.data();\r\n                  const id = doc.id;\r\n                  return { id, ...data }\r\n              })\r\n              setUserPosts(posts)\r\n          })\r\n      \r\n\r\n      if(props.following.indexOf(props.route.params.uid) > -1)\r\n          {\r\n              setFollowing(true);\r\n\r\n          } else {\r\n              setFollowing(false);\r\n          }\r\n          setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n      if (loading === true && refresh === false) {\r\n        fetchData()\r\n      } else {\r\n        setRefresh(true)\r\n        fetchRefreshData()\r\n      }\r\n      setRefresh(true)\r\n      setLoading(false)\r\n    }, [routes, tabIndex, props.route.params.uid, props.following])\r\n\r\n    const TabScene = ({\r\n        numCols,\r\n        data,\r\n        renderItem,\r\n        onGetRef,\r\n        scrollY,\r\n        onScrollEndDrag,\r\n        onMomentumScrollEnd,\r\n        onMomentumScrollBegin,\r\n      }) => {\r\n        const windowHeight = Dimensions.get('window').height;\r\n      \r\n        return (\r\n          <Animated.FlatList\r\n            scrollToOverflowEnabled={true}\r\n            numColumns={numCols}\r\n            ref={onGetRef}\r\n            scrollEventThrottle={16}\r\n            onScroll={Animated.event([{nativeEvent: {contentOffset: {y: scrollY}}}], {\r\n            useNativeDriver: true })}\r\n            onMomentumScrollBegin={onMomentumScrollBegin}\r\n            onScrollEndDrag={onScrollEndDrag}\r\n            onMomentumScrollEnd={onMomentumScrollEnd}\r\n            ItemSeparatorComponent={() => <View style={{height: 10}} />}\r\n            ListHeaderComponent={() => <View style={{height: 10}} />}\r\n            contentContainerStyle={{\r\n              paddingTop: HeaderHeight + TabBarHeight,\r\n              paddingHorizontal: 10,\r\n              minHeight: windowHeight - TabBarHeight,\r\n            }}\r\n            showsHorizontalScrollIndicator={false}\r\n            data={data}\r\n            renderItem={renderItem}\r\n            showsVerticalScrollIndicator={false}\r\n            keyExtractor={(item, index) => index.toString()}\r\n            refreshing={loading}\r\n            onRefresh={()=>fetchRefreshData()}\r\n          />\r\n        );\r\n      };\r\n      \r\n\r\n    const onFollow = () => {\r\n        firebase.firestore()\r\n        .collection(\"following\")\r\n        .doc(firebase.auth().currentUser.uid)\r\n        .collection(\"userFollowing\")\r\n        .doc(props.route.params.uid)\r\n        .set({})\r\n    }\r\n    const onUnFollow = () => {\r\n        firebase.firestore()\r\n        .collection(\"following\")\r\n        .doc(firebase.auth().currentUser.uid)\r\n        .collection(\"userFollowing\")\r\n        .doc(props.route.params.uid)\r\n        .delete()\r\n    }\r\n\r\n    const onLogout = () => {\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n        const [tabIndex, setIndex] = useState(0);\r\n        const [routes] = useState([\r\n          {key: 'tab1', title: 'Tab1'},\r\n          {key: 'tab2', title: 'Tab2'},\r\n        ]);\r\n        const [tab2Data] = useState(Array(30).fill(0));\r\n        const scrollY = useRef(new Animated.Value(0)).current;\r\n        let listRefArr = useRef([]);\r\n        let listOffset = useRef({});\r\n        let isListGliding = useRef(false);\r\n      \r\n        useEffect(() => {\r\n          scrollY.addListener(({value}) => {\r\n            const curRoute = routes[tabIndex].key;\r\n            listOffset.current[curRoute] = value;\r\n          });\r\n          return () => {\r\n            scrollY.removeAllListeners();\r\n          };\r\n        }, [routes, tabIndex]);\r\n      \r\n        const syncScrollOffset = () => {\r\n          const curRouteKey = routes[tabIndex].key;\r\n          listRefArr.current.forEach((item) => {\r\n            if (item.key !== curRouteKey) {\r\n              if (scrollY._value < HeaderHeight && scrollY._value >= 0) {\r\n                if (item.value) {\r\n                  item.value.scrollToOffset({\r\n                    offset: scrollY._value,\r\n                    animated: false,\r\n                  });\r\n                  listOffset.current[item.key] = scrollY._value;\r\n                }\r\n              } else if (scrollY._value >= HeaderHeight) {\r\n                if (\r\n                  listOffset.current[item.key] < HeaderHeight ||\r\n                  listOffset.current[item.key] == null\r\n                ) {\r\n                  if (item.value) {\r\n                    item.value.scrollToOffset({\r\n                      offset: HeaderHeight,\r\n                      animated: false,\r\n                    });\r\n                    listOffset.current[item.key] = HeaderHeight;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          });\r\n        };\r\n      \r\n        const onMomentumScrollBegin = () => {\r\n          isListGliding.current = true;\r\n        };\r\n      \r\n        const onMomentumScrollEnd = () => {\r\n          isListGliding.current = false;\r\n          syncScrollOffset();\r\n        };\r\n      \r\n        const onScrollEndDrag = () => {\r\n          syncScrollOffset();\r\n        };\r\n      \r\n        const renderHeader = () => {\r\n          const y = scrollY.interpolate({\r\n            inputRange: [0, HeaderHeight],\r\n            outputRange: [0, -HeaderHeight],\r\n            extrapolateRight: 'clamp',\r\n          });\r\n          return (\r\n            <Animated.View style={[styles.header, {transform: [{translateY: y}]}]}>\r\n              <View>\r\n              <Image\r\n                                style={styles.profileImage}\r\n                                source={{ uri: user.profilePic }}\r\n                            />\r\n              </View>\r\n              <View style={styles.container}>\r\n                <Text>{user.email}</Text>\r\n\r\n                {props.route.params.uid !== firebase.auth().currentUser.uid ? (\r\n                    <View style={styles.buttonContainer}> \r\n                        {following ? (\r\n                            <Button\r\n                                title=\"Following\"\r\n                                onPress={()=> onUnFollow()}   \r\n                        />\r\n                        ) :\r\n                        (\r\n                            <Button\r\n                                title=\"Follow\"\r\n                                onPress={()=> onFollow()}   \r\n                            />\r\n                        )}\r\n                    </View>\r\n                ) : \r\n                  <View style={styles.buttonContainer}>\r\n                    <Button\r\n                        title=\"Logout\"\r\n                        onPress={()=> onLogout()}\r\n                    />\r\n                    <Button\r\n                        title=\"Change Profile Pic\"\r\n                        onPress={() => props.navigation.navigate('Settings' , { image })}\r\n                    />\r\n                  </View>}\r\n              </View>\r\n            </Animated.View>\r\n          );\r\n\r\n        };\r\n      \r\n        const rednerTab1Item = ({item}) => {\r\n          return (\r\n            <View\r\n            style={styles.containerImage}>\r\n            <Image\r\n                style={styles.image}\r\n                source={{ uri: item.downloadURL }}\r\n            />\r\n        </View>\r\n              /* \r\n            <View style={styles.containerGallery}>\r\n                \r\n                 <FlatList \r\n                    numColumns={0}\r\n                    horizontal={false}\r\n                    data={userPosts}\r\n                    renderItem={({ item }) => (\r\n                        <View\r\n                            style={styles.containerImage}>\r\n                            <Image\r\n                                style={styles.image}\r\n                                source={{ uri: item.downloadURL }}\r\n                            />\r\n                        </View>\r\n                    )}\r\n\r\n                />\r\n            </View>\r\n                                  */\r\n\r\n            );\r\n        };\r\n      \r\n        const rednerTab2Item = ({item, index}) => {\r\n          return (\r\n            <View\r\n              style={{\r\n                marginLeft: index % 3 === 0 ? 0 : 10,\r\n                borderRadius: 16,\r\n                width: tab2ItemSize,\r\n                height: tab2ItemSize,\r\n                backgroundColor: '#aaa',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}>\r\n              <Text>{index}</Text>\r\n            </View>\r\n          );\r\n        };\r\n      \r\n        const renderLabel = ({route, focused}) => {\r\n          return (\r\n            <Text style={[styles.label, {opacity: focused ? 1 : 0.5}]}>\r\n              {route.title}\r\n            </Text>\r\n          );\r\n        };\r\n      \r\n        const renderScene = ({route}) => {\r\n          const focused = route.key === routes[tabIndex].key;\r\n          let numCols;\r\n          let data;\r\n          let renderItem;\r\n          switch (route.key) {\r\n            case 'tab1':\r\n              numCols = 0;\r\n              data = userPosts;\r\n              renderItem = rednerTab1Item;\r\n              break;\r\n            case 'tab2':\r\n              numCols = 3;\r\n              data = tab2Data;\r\n              renderItem = rednerTab2Item;\r\n              break;\r\n            default:\r\n              return null;\r\n          }\r\n          return (\r\n            <TabScene\r\n              numCols={numCols}\r\n              data={data}\r\n              renderItem={renderItem}\r\n              scrollY={scrollY}\r\n              onMomentumScrollBegin={onMomentumScrollBegin}\r\n              onScrollEndDrag={onScrollEndDrag}\r\n              onMomentumScrollEnd={onMomentumScrollEnd}\r\n              onGetRef={(ref) => {\r\n                if (ref) {\r\n                  const found = listRefArr.current.find((e) => e.key === route.key);\r\n                  if (!found) {\r\n                    listRefArr.current.push({\r\n                      key: route.key,\r\n                      value: ref,\r\n                    });\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n          );\r\n        };\r\n      \r\n        const renderTabBar = (props) => {\r\n          const y = scrollY.interpolate({\r\n            inputRange: [0, HeaderHeight],\r\n            outputRange: [HeaderHeight, 0],\r\n            extrapolateRight: 'clamp',\r\n          });\r\n          return (\r\n            <Animated.View\r\n              style={{\r\n                top: 0,\r\n                zIndex: 1,\r\n                position: 'absolute',\r\n                transform: [{translateY: y}],\r\n                width: '100%',\r\n              }}>\r\n              <TabBar\r\n                {...props}\r\n                onTabPress={({route, preventDefault}) => {\r\n                  if (isListGliding.current) {\r\n                    preventDefault();\r\n                  }\r\n                }}\r\n                style={styles.tab}\r\n                renderLabel={renderLabel}\r\n                indicatorStyle={styles.indicator}\r\n              />\r\n            </Animated.View>\r\n          );\r\n        };\r\n      \r\n        const renderTabView = () => {\r\n          return (\r\n            <TabView\r\n              onIndexChange={(index) => setIndex(index)}\r\n              navigationState={{index: tabIndex, routes}}\r\n              renderScene={renderScene}\r\n              renderTabBar={renderTabBar}\r\n              initialLayout={{\r\n                height: 0,\r\n                width: Dimensions.get('window').width,\r\n              }}\r\n            />\r\n          );\r\n        };\r\n      \r\n        \r\n    if(user === null) {\r\n        return <View/>\r\n    }\r\n    \r\n    return (\r\n            <View style={{flex: 1}}>\r\n              {renderTabView()}\r\n              {renderHeader()}\r\n\r\n            </View>\r\n          );\r\n        <View style={styles.container}>\r\n            <View style={styles.containerInfo}>\r\n                <Text>{user.email}</Text>\r\n                <Text>{user.email}</Text>\r\n\r\n                {props.route.params.uid !== firebase.auth().currentUser.uid ? (\r\n                    <View> \r\n                        {following ? (\r\n                            <Button\r\n                                title=\"Following\"\r\n                                onPress={()=> onUnFollow()}   \r\n                        />\r\n                        ) :\r\n                        (\r\n                            <Button\r\n                                title=\"Follow\"\r\n                                onPress={()=> onFollow()}   \r\n                            />\r\n                        )}\r\n                    </View>\r\n                ) :  \r\n                    <Button\r\n                        title=\"Logout\"\r\n                        onPress={()=> onLogout()}   \r\n                    />}\r\n            </View>\r\n\r\n            <View style={styles.containerGallery}>\r\n                <FlatList\r\n                    numColumns={3}\r\n                    horizontal={false}\r\n                    data={userPosts}\r\n                    renderItem={({ item }) => (\r\n                        <View\r\n                            style={styles.containerImage}>\r\n                            <Image\r\n                                style={styles.image}\r\n                                source={{ uri: item.downloadURL }}\r\n                            />\r\n                        </View>\r\n                    )}\r\n\r\n                />\r\n            </View>\r\n        </View>\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n      profileImage: {\r\n        height:150,\r\n        width:150,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        resizeMode: 'contain',\r\n        flex: 1,\r\n        marginBottom: 50\r\n        \r\n    },\r\n    container: {\r\n      marginTop: -90\r\n    },\r\n    containerGallery: {\r\n        flex: 1\r\n    },\r\n    containerImage: {\r\n        flex: 1/3\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        aspectRatio: 1/1\r\n    },\r\n    buttonContainer: {\r\n      marginBottom: 40\r\n    },\r\n    header: {\r\n        top: 0,\r\n        height: HeaderHeight,\r\n        width: '100%',\r\n        backgroundColor: '#40C4FF',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        position: 'absolute',\r\n      },\r\n      label: {fontSize: 16, color: '#222'},\r\n      tab: {elevation: 0, shadowOpacity: 0, backgroundColor: '#FFCC80'},\r\n      indicator: {backgroundColor: '#222'},\r\n})\r\n\r\n\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser,\r\n    posts: store.userState.posts,\r\n    following: store.userState.following\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(Profile);\r\n\r\n/*\r\nconst AnimatedIndicator = Animated.createAnimatedComponent(ActivityIndicator);\r\nconst windowHeight = Dimensions.get('window').height;\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst TabBarHeight = 48;\r\nconst HeaderHeight = 250;\r\nconst SafeStatusBar = Platform.select({\r\n  ios: 44,\r\n  android: StatusBar.currentHeight,\r\n});\r\nconst tab1ItemSize = (windowWidth - 30) / 2;\r\nconst tab2ItemSize = (windowWidth - 40) / 3;\r\nconst PullToRefreshDist = 150;\r\n\r\nfunction Profile(props)  {\r\n  /**\r\n   * stats\r\n   \r\n  \r\n   const [userPosts, setUserPosts] = useState([]);\r\n   const [user, setUser] = useState(null);\r\n   const [following, setFollowing] = useState(false);\r\n\r\n  const [tabIndex, setIndex] = useState(0);\r\n  const [routes] = useState([\r\n    {key: 'tab1', title: 'Tab1'},\r\n    {key: 'tab2', title: 'Tab2'},\r\n  ]);\r\n  const [canScroll, setCanScroll] = useState(true);\r\n  const [tab2Data] = useState(Array(30).fill(0));\r\n\r\n  /**\r\n   * ref\r\n   \r\n  const scrollY = useRef(new Animated.Value(0)).current;\r\n  const headerScrollY = useRef(new Animated.Value(0)).current;\r\n  // for capturing header scroll on Android\r\n  const headerMoveScrollY = useRef(new Animated.Value(0)).current;\r\n  const listRefArr = useRef([]);\r\n  const listOffset = useRef({});\r\n  const isListGliding = useRef(false);\r\n  const headerScrollStart = useRef(0);\r\n  const _tabIndex = useRef(0);\r\n  const refreshStatusRef = useRef(false);\r\n\r\n  /**\r\n   * PanResponder for header\r\n   \r\n  const headerPanResponder = useRef(\r\n    PanResponder.create({\r\n      onStartShouldSetPanResponderCapture: (evt, gestureState) => false,\r\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => false,\r\n      onStartShouldSetPanResponder: (evt, gestureState) => {\r\n        headerScrollY.stopAnimation();\r\n        syncScrollOffset();\r\n        return false;\r\n      },\r\n\r\n      onMoveShouldSetPanResponder: (evt, gestureState) => {\r\n        headerScrollY.stopAnimation();\r\n        return Math.abs(gestureState.dy) > 5;\r\n      },\r\n      onPanResponderEnd: (evt, gestureState) => {\r\n        handlePanReleaseOrEnd(evt, gestureState);\r\n      },\r\n      onPanResponderMove: (evt, gestureState) => {\r\n        const curListRef = listRefArr.current.find(\r\n          (ref) => ref.key === routes[_tabIndex.current].key,\r\n        );\r\n        const headerScrollOffset = -gestureState.dy + headerScrollStart.current;\r\n        if (curListRef.value) {\r\n          // scroll up\r\n          if (headerScrollOffset > 0) {\r\n            curListRef.value.scrollToOffset({\r\n              offset: headerScrollOffset,\r\n              animated: false,\r\n            });\r\n            // start pull down\r\n          } else {\r\n            if (Platform.OS === 'ios') {\r\n              curListRef.value.scrollToOffset({\r\n                offset: headerScrollOffset / 3,\r\n                animated: false,\r\n              });\r\n            } else if (Platform.OS === 'android') {\r\n              if (!refreshStatusRef.current) {\r\n                headerMoveScrollY.setValue(headerScrollOffset / 1.5);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      onShouldBlockNativeResponder: () => true,\r\n      onPanResponderGrant: (evt, gestureState) => {\r\n        headerScrollStart.current = scrollY._value;\r\n      },\r\n    }),\r\n  ).current;\r\n\r\n  /**\r\n   * PanResponder for list in tab scene\r\n   \r\n  const listPanResponder = useRef(\r\n    PanResponder.create({\r\n      onStartShouldSetPanResponderCapture: (evt, gestureState) => false,\r\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) => false,\r\n      onStartShouldSetPanResponder: (evt, gestureState) => false,\r\n      onMoveShouldSetPanResponder: (evt, gestureState) => {\r\n        headerScrollY.stopAnimation();\r\n        return false;\r\n      },\r\n      onShouldBlockNativeResponder: () => true,\r\n      onPanResponderGrant: (evt, gestureState) => {\r\n        headerScrollY.stopAnimation();\r\n      },\r\n    }),\r\n  ).current;\r\n\r\n  /**\r\n   * effect\r\n   \r\n  useEffect(() => {\r\n    const { currentUser, posts } = props;\r\n\r\n      if(props.route.params.uid === firebase.auth().currentUser.uid){\r\n          setUser(currentUser)\r\n          setUserPosts(posts)\r\n      } else {\r\n          console.log(\"Testing\")\r\n          firebase.firestore()\r\n          .collection(\"users\")\r\n          .doc(props.route.params.uid)\r\n          .get()\r\n          .then((snapshot) => {\r\n              if(snapshot.exists){\r\n                  setUser(snapshot.data())\r\n              }\r\n              else {\r\n                  console.log('does not exist')\r\n              }\r\n          })\r\n          firebase.firestore()\r\n          .collection(\"posts\")\r\n          .doc(props.route.params.uid)\r\n          .collection(\"userPosts\")\r\n          .orderBy(\"captioncreation\", \"asc\")\r\n          .get()\r\n          .then((snapshot) => {\r\n              let posts = snapshot.docs.map(doc => {\r\n                  const data = doc.data();\r\n                  const id = doc.id;\r\n                  return { id, ...data }\r\n              })\r\n              setUserPosts(posts)\r\n          })\r\n      }\r\n\r\n      if(props.following.indexOf(props.route.params.uid) > -1)\r\n          {\r\n              setFollowing(true);\r\n\r\n          } else {\r\n              setFollowing(false);\r\n          }\r\n    scrollY.addListener(({value}) => {\r\n      const curRoute = routes[tabIndex].key;\r\n      listOffset.current[curRoute] = value;\r\n    });\r\n\r\n    headerScrollY.addListener(({value}) => {\r\n      listRefArr.current.forEach((item) => {\r\n        if (item.key !== routes[tabIndex].key) {\r\n          return;\r\n        }\r\n        if (value > HeaderHeight || value < 0) {\r\n          headerScrollY.stopAnimation();\r\n          syncScrollOffset();\r\n        }\r\n        if (item.value && value <= HeaderHeight) {\r\n          item.value.scrollToOffset({\r\n            offset: value,\r\n            animated: false,\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return () => {\r\n      scrollY.removeAllListeners();\r\n      headerScrollY.removeAllListeners();\r\n    };\r\n  }, [routes, tabIndex]);\r\n\r\n  /**\r\n   *  helper functions\r\n   \r\n  const syncScrollOffset = () => {\r\n    const curRouteKey = routes[_tabIndex.current].key;\r\n\r\n    listRefArr.current.forEach((item) => {\r\n      if (item.key !== curRouteKey) {\r\n        if (scrollY._value < HeaderHeight && scrollY._value >= 0) {\r\n          if (item.value) {\r\n            item.value.scrollToOffset({\r\n              offset: scrollY._value,\r\n              animated: false,\r\n            });\r\n            listOffset.current[item.key] = scrollY._value;\r\n          }\r\n        } else if (scrollY._value >= HeaderHeight) {\r\n          if (\r\n            listOffset.current[item.key] < HeaderHeight ||\r\n            listOffset.current[item.key] == null\r\n          ) {\r\n            if (item.value) {\r\n              item.value.scrollToOffset({\r\n                offset: HeaderHeight,\r\n                animated: false,\r\n              });\r\n              listOffset.current[item.key] = HeaderHeight;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const startRefreshAction = () => {\r\n    if (Platform.OS === 'ios') {\r\n      listRefArr.current.forEach((listRef) => {\r\n        listRef.value.scrollToOffset({\r\n          offset: -50,\r\n          animated: true,\r\n        });\r\n      });\r\n      refresh().finally(() => {\r\n        syncScrollOffset();\r\n        // do not bounce back if user scroll to another position\r\n        if (scrollY._value < 0) {\r\n          listRefArr.current.forEach((listRef) => {\r\n            listRef.value.scrollToOffset({\r\n              offset: 0,\r\n              animated: true,\r\n            });\r\n          });\r\n        }\r\n      });\r\n    } else if (Platform.OS === 'android') {\r\n      Animated.timing(headerMoveScrollY, {\r\n        toValue: -150,\r\n        duration: 300,\r\n        useNativeDriver: true,\r\n      }).start();\r\n      refresh().finally(() => {\r\n        Animated.timing(headerMoveScrollY, {\r\n          toValue: 0,\r\n          duration: 300,\r\n          useNativeDriver: true,\r\n        }).start();\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePanReleaseOrEnd = (evt, gestureState) => {\r\n    // console.log('handlePanReleaseOrEnd', scrollY._value);\r\n    syncScrollOffset();\r\n    headerScrollY.setValue(scrollY._value);\r\n    if (Platform.OS === 'ios') {\r\n      if (scrollY._value < 0) {\r\n        if (scrollY._value < -PullToRefreshDist && !refreshStatusRef.current) {\r\n          startRefreshAction();\r\n        } else {\r\n          // should bounce back\r\n          listRefArr.current.forEach((listRef) => {\r\n            listRef.value.scrollToOffset({\r\n              offset: 0,\r\n              animated: true,\r\n            });\r\n          });\r\n        }\r\n      } else {\r\n        if (Math.abs(gestureState.vy) < 0.2) {\r\n          return;\r\n        }\r\n        Animated.decay(headerScrollY, {\r\n          velocity: -gestureState.vy,\r\n          useNativeDriver: true,\r\n        }).start(() => {\r\n          syncScrollOffset();\r\n        });\r\n      }\r\n    } else if (Platform.OS === 'android') {\r\n      if (\r\n        headerMoveScrollY._value < 0 &&\r\n        headerMoveScrollY._value / 1.5 < -PullToRefreshDist\r\n      ) {\r\n        startRefreshAction();\r\n      } else {\r\n        Animated.timing(headerMoveScrollY, {\r\n          toValue: 0,\r\n          duration: 300,\r\n          useNativeDriver: true,\r\n        }).start();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onMomentumScrollBegin = () => {\r\n    isListGliding.current = true;\r\n  };\r\n\r\n  const onMomentumScrollEnd = () => {\r\n    isListGliding.current = false;\r\n    syncScrollOffset();\r\n    // console.log('onMomentumScrollEnd'); \r\n  };\r\n\r\n  const onScrollEndDrag = (e) => {\r\n    syncScrollOffset();\r\n\r\n    const offsetY = e.nativeEvent.contentOffset.y;\r\n    // console.log('onScrollEndDrag', offsetY);\r\n    // iOS only\r\n    if (Platform.OS === 'ios') {\r\n      if (offsetY < -PullToRefreshDist && !refreshStatusRef.current) {\r\n        startRefreshAction();\r\n      }\r\n    }\r\n\r\n    // check pull to refresh\r\n  };\r\n  const fetchData = () => {\r\n    console.log(\"test\")\r\n    const { currentUser, posts } = props;\r\n\r\n    if(props.route.params.uid === firebase.auth().currentUser.uid){\r\n        setUser(currentUser)\r\n        setUserPosts(posts)\r\n    } else {\r\n        console.log(\"Testing\")\r\n        firebase.firestore()\r\n        .collection(\"users\")\r\n        .doc(props.route.params.uid)\r\n        .get()\r\n        .then((snapshot) => {\r\n            if(snapshot.exists){\r\n                setUser(snapshot.data())\r\n            }\r\n            else {\r\n                console.log('does not exist')\r\n            }\r\n        })\r\n        firebase.firestore()\r\n        .collection(\"posts\")\r\n        .doc(props.route.params.uid)\r\n        .collection(\"userPosts\")\r\n        .orderBy(\"captioncreation\", \"asc\")\r\n        .get()\r\n        .then((snapshot) => {\r\n            let posts = snapshot.docs.map(doc => {\r\n                const data = doc.data();\r\n                const id = doc.id;\r\n                return { id, ...data }\r\n            })\r\n            setUserPosts(posts)\r\n        })\r\n    }\r\n\r\n    if(props.following.indexOf(props.route.params.uid) > -1)\r\n        {\r\n            setFollowing(true);\r\n\r\n        } else {\r\n            setFollowing(false);\r\n        }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [routes, tabIndex, props.route.params.uid, props.following])\r\n\r\n  const refresh = () => {\r\n    console.log('-- start refresh');\r\n    refreshStatusRef.current = true;\r\n    refreshStatusRef.current = false;\r\n  };\r\n\r\n  /**\r\n   * render Helper\r\n   \r\n   if (user === null) {\r\n    return <View />\r\n}\r\n\r\n  const renderHeader = () => {\r\n    const y = scrollY.interpolate({\r\n      inputRange: [0, HeaderHeight],\r\n      outputRange: [0, -HeaderHeight],\r\n      extrapolateRight: 'clamp',\r\n      // extrapolate: 'clamp',\r\n    });\r\n    return (\r\n      <Animated.View\r\n        {...headerPanResponder.panHandlers}\r\n        style={[styles.header, {transform: [{translateY: y}]}]}>\r\n        <View style={styles.container}>\r\n            <View style={styles.containerInfo}>\r\n                <Text>{user.email}</Text>\r\n                <Text>{user.email}</Text>\r\n          {props.route.params.uid !== firebase.auth().currentUser.uid ? (\r\n        <View> \r\n        {following ? (\r\n            <Button\r\n                title=\"Following\"\r\n                onPress={()=> onUnFollow()}   \r\n        />\r\n        ) :\r\n        (\r\n            <Button\r\n                title=\"Follow\"\r\n                onPress={()=> onFollow()}   \r\n            />\r\n        )}\r\n    </View>\r\n) : \r\n  <View>\r\n    <Button\r\n        title=\"Logout\"\r\n        onPress={()=> onLogout()}\r\n    />\r\n    <Button\r\n        title=\"Change Profile Pic\"\r\n        onPress={()=> onLogout()}\r\n    />\r\n  </View>}\r\n  </View>\r\n  </View>\r\n      </Animated.View>\r\n    );\r\n  };\r\n\r\n  const rednerTab1Item = ({item, index}) => {\r\n    return (\r\n      <View\r\n            style={styles.containerImage}>\r\n            <Image\r\n                style={styles.image}\r\n                source={{ uri: item.downloadURL }}\r\n            />\r\n      </View>\r\n      <View style={styles.containerGallery}>\r\n                \r\n      <FlatList \r\n         numColumns={0}\r\n         horizontal={false}\r\n         data={userPosts}\r\n         renderItem={({ item }) => (\r\n             <View\r\n                 style={styles.containerImage}>\r\n                 <Image\r\n                     style={styles.image}\r\n                     source={{ uri: item.downloadURL }}\r\n                 />\r\n             </View>\r\n         )}\r\n     />\r\n </View>\r\n    );\r\n  };\r\n\r\n  const rednerTab2Item = ({item, index}) => {\r\n    return (\r\n      <View\r\n        style={{\r\n          marginLeft: index % 3 === 0 ? 0 : 10,\r\n          borderRadius: 16,\r\n          width: tab2ItemSize,\r\n          height: tab2ItemSize,\r\n          backgroundColor: '#aaa',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}>\r\n        <Text>{index}</Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderLabel = ({route, focused}) => {\r\n    return (\r\n      <Text style={[styles.label, {opacity: focused ? 1 : 0.5}]}>\r\n        {route.title}\r\n      </Text>\r\n    );\r\n  };\r\n\r\n  const renderScene = ({route}) => {\r\n    const focused = route.key === routes[tabIndex].key;\r\n    let numCols;\r\n    let data;\r\n    let renderItem;\r\n    switch (route.key) {\r\n      case 'tab1':\r\n        numCols = 0;\r\n        data = userPosts;\r\n        renderItem = rednerTab1Item;\r\n        break;\r\n      case 'tab2':\r\n        numCols = 3;\r\n        data = tab2Data;\r\n        renderItem = rednerTab2Item;\r\n        break;\r\n      default:\r\n        return null;\r\n    }\r\n    return (\r\n      <Animated.FlatList\r\n        scrollToOverflowEnabled={true}\r\n        // scrollEnabled={canScroll}\r\n        {...listPanResponder.panHandlers}\r\n        numColumns={numCols}\r\n        ref={(ref) => {\r\n          if (ref) {\r\n            const found = listRefArr.current.find((e) => e.key === route.key);\r\n            if (!found) {\r\n              listRefArr.current.push({\r\n                key: route.key,\r\n                value: ref,\r\n              });\r\n            }\r\n          }\r\n        }}\r\n        scrollEventThrottle={16}\r\n        onScroll={\r\n          focused\r\n            ? Animated.event(\r\n                [\r\n                  {\r\n                    nativeEvent: {contentOffset: {y: scrollY}},\r\n                  },\r\n                ],\r\n                {useNativeDriver: true},\r\n              )\r\n            : null\r\n        }\r\n        onMomentumScrollBegin={onMomentumScrollBegin}\r\n        onScrollEndDrag={onScrollEndDrag}\r\n        onMomentumScrollEnd={onMomentumScrollEnd}\r\n        ItemSeparatorComponent={() => <View style={{height: 10}} />}\r\n        ListHeaderComponent={() => <View style={{height: 10}} />}\r\n        contentContainerStyle={{\r\n          paddingTop: HeaderHeight + TabBarHeight,\r\n          paddingHorizontal: 10,\r\n          minHeight: windowHeight - SafeStatusBar + HeaderHeight,\r\n        }}\r\n        showsHorizontalScrollIndicator={false}\r\n        data={data}\r\n        renderItem={renderItem}\r\n        showsVerticalScrollIndicator={false}\r\n        keyExtractor={(item, index) => index.toString()}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderTabBar = (props) => {\r\n    const y = scrollY.interpolate({\r\n      inputRange: [0, HeaderHeight],\r\n      outputRange: [HeaderHeight, 0],\r\n      // extrapolate: 'clamp',\r\n      extrapolateRight: 'clamp',\r\n    });\r\n    return (\r\n      <Animated.View\r\n        style={{\r\n          top: 0,\r\n          zIndex: 1,\r\n          position: 'absolute',\r\n          transform: [{translateY: y}],\r\n          width: '100%',\r\n        }}>\r\n        <TabBar\r\n          {...props}\r\n          onTabPress={({route, preventDefault}) => {\r\n            if (isListGliding.current) {\r\n              preventDefault();\r\n            }\r\n          }}\r\n          style={styles.tab}\r\n          renderLabel={renderLabel}\r\n          indicatorStyle={styles.indicator}\r\n        />\r\n      </Animated.View>\r\n    );\r\n  };\r\n\r\n  const renderTabView = () => {\r\n    return (\r\n      <TabView\r\n        onSwipeStart={() => setCanScroll(false)}\r\n        onSwipeEnd={() => setCanScroll(true)}\r\n        onIndexChange={(id) => {\r\n          _tabIndex.current = id;\r\n          setIndex(id);\r\n        }}\r\n        navigationState={{index: tabIndex, routes}}\r\n        renderScene={renderScene}\r\n        renderTabBar={renderTabBar}\r\n        initialLayout={{\r\n          height: 0,\r\n          width: windowWidth,\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderCustomRefresh = () => {\r\n    // headerMoveScrollY\r\n    return Platform.select({\r\n      ios: (\r\n        <AnimatedIndicator\r\n          style={{\r\n            top: -50,\r\n            position: 'absolute',\r\n            alignSelf: 'center',\r\n            transform: [\r\n              {\r\n                translateY: scrollY.interpolate({\r\n                  inputRange: [-100, 0],\r\n                  outputRange: [120, 0],\r\n                  extrapolate: 'clamp',\r\n                }),\r\n              },\r\n            ],\r\n          }}\r\n          animating\r\n        />\r\n      ),\r\n      android: (\r\n        <Animated.View\r\n          style={{\r\n            transform: [\r\n              {\r\n                translateY: headerMoveScrollY.interpolate({\r\n                  inputRange: [-300, 0],\r\n                  outputRange: [150, 0],\r\n                  extrapolate: 'clamp',\r\n                }),\r\n              },\r\n            ],\r\n            backgroundColor: '#eee',\r\n            height: 38,\r\n            width: 38,\r\n            borderRadius: 19,\r\n            borderWidth: 2,\r\n            borderColor: '#ddd',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            alignSelf: 'center',\r\n            top: -50,\r\n            position: 'absolute',\r\n          }}>\r\n          <ActivityIndicator animating />\r\n        </Animated.View>\r\n      ),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {renderTabView()}\r\n      {renderHeader()}\r\n      {renderCustomRefresh()}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  containerInfo: {\r\n      margin: 20\r\n  },\r\n  containerGallery: {\r\n      flex: 1\r\n  },\r\n  containerImage: {\r\n      flex: 1/3\r\n  },\r\n  image: {\r\n      flex: 1,\r\n      aspectRatio: 1/1\r\n  },\r\n  header: {\r\n    height: HeaderHeight,\r\n    width: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    position: 'absolute',\r\n    backgroundColor: '#FFA088',\r\n  },\r\n  label: {fontSize: 16, color: '#222'},\r\n  tab: {\r\n    elevation: 0,\r\n    shadowOpacity: 0,\r\n    backgroundColor: '#FFCC80',\r\n    height: TabBarHeight,\r\n  },\r\n  indicator: {backgroundColor: '#222'},\r\n});\r\n\r\nconst mapStateToProps = (store) => ({\r\n  currentUser: store.userState.currentUser,\r\n  posts: store.userState.posts,\r\n  following: store.userState.following\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(Profile);\r\n*/"]},"metadata":{},"sourceType":"module"}