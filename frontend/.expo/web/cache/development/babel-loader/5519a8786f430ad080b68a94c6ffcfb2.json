{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\downloads\\\\PersonalProject\\\\ReactApp\\\\ReactApp\\\\frontend\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport firebase from 'firebase';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./redux/reducers\";\nimport thunk from 'redux-thunk';\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nvar firebaseConfig = {\n  apiKey: \"AIzaSyD6BkglJA3KJ4kRaiqCR9V-SSr1JXTUSKw\",\n  authDomain: \"app-project-7328c.firebaseapp.com\",\n  projectId: \"app-project-7328c\",\n  storageBucket: \"app-project-7328c.appspot.com\",\n  messagingSenderId: \"860281315244\",\n  appId: \"1:860281315244:web:68f400bc9c83874330e409\",\n  measurementId: \"G-6DY6W4MMSR\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport LandingScreen from \"./components/auth/Landing\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport RegisterScreen from \"./components/auth/Register\";\nimport LoginScreen from \"./components/auth/Login\";\nimport MainScreen from \"./components/main\";\nimport FeedScreen from \"./components/main/Feed\";\nimport ProfileScreen from \"./components/main/Profile\";\nimport AddScreen from \"./components/main/Add\";\nimport SaveScreen from \"./components/main/Save\";\nimport CommentScreen from \"./components/main/Comment\";\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }\n        }, \"Loading\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Landing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 8\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Add\",\n        component: AddScreen,\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Save\",\n        component: SaveScreen,\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Comment\",\n        component: CommentScreen,\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["D:/downloads/PersonalProject/ReactApp/ReactApp/frontend/App.js"],"names":["StatusBar","React","Component","firebase","Provider","createStore","applyMiddleware","rootReducer","thunk","store","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","NavigationContainer","LandingScreen","createStackNavigator","RegisterScreen","LoginScreen","MainScreen","FeedScreen","ProfileScreen","AddScreen","SaveScreen","CommentScreen","Stack","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","flex","justifyContent","headerShown","navigation"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAKA,OAAOC,QAAP,MAAqB,UAArB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,IAAMC,KAAK,GAAGJ,WAAW,CAACE,WAAD,EAAcD,eAAe,CAACE,KAAD,CAA7B,CAAzB;AAEA,IAAME,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,mCAFS;AAGrBC,EAAAA,SAAS,EAAE,mBAHU;AAIrBC,EAAAA,aAAa,EAAE,+BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE,2CANc;AAOrBC,EAAAA,aAAa,EAAE;AAPM,CAAvB;;AAUA,IAAGd,QAAQ,CAACe,IAAT,CAAcC,MAAd,KAAyB,CAA5B,EAA+B;AAC7BhB,EAAAA,QAAQ,CAACiB,aAAT,CAAuBV,cAAvB;AAED;;AAED,SAASW,mBAAT,QAAoC,0BAApC;AACA,OAAOC,aAAP;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AAEA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AAGA,IAAMC,KAAK,GAAGT,oBAAoB,EAAlC;AAEA,WAAaU,GAAb;AAAA;;AAAA;;AACE,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAFgB;AAKjB;;AANH;AAAA;AAAA,WAQE,6BAAmB;AAAA;;AACjBjC,MAAAA,QAAQ,CAACkC,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,IAAD,EAAU;AAC3C,YAAG,CAACA,IAAJ,EAAS;AACP,UAAA,MAAI,CAACC,QAAL,CAAc;AACZC,YAAAA,QAAQ,EAAE,KADE;AAEZL,YAAAA,MAAM,EAAE;AAFI,WAAd;AAID,SALD,MAKO;AACL,UAAA,MAAI,CAACI,QAAL,CAAc;AACZC,YAAAA,QAAQ,EAAE,IADE;AAEZL,YAAAA,MAAM,EAAE;AAFI,WAAd;AAID;AACF,OAZD;AAaD;AAtBH;AAAA;AAAA,WAuBE,kBAAS;AACP,wBAA6B,KAAKD,KAAlC;AAAA,UAAQM,QAAR,eAAQA,QAAR;AAAA,UAAkBL,MAAlB,eAAkBA,MAAlB;;AACA,UAAG,CAACA,MAAJ,EAAY;AACV,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEM,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,cAAc,EAAE;AAA3B,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAMD;;AAED,UAAG,CAACF,QAAJ,EAAa;AACb,eACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD,CAAO,SAAP;AAAiB,UAAA,gBAAgB,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,SAAnB;AAA6B,UAAA,SAAS,EAAEnB,aAAxC;AAAuD,UAAA,OAAO,EAAE;AAAEsB,YAAAA,WAAW,EAAE;AAAf,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAEpB,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,SAAS,EAAEC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CADJ,CADJ;AASA;;AAED,aACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEhB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD,CAAO,SAAP;AAAiB,QAAA,gBAAgB,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEiB,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,KAAnB;AAAyB,QAAA,SAAS,EAAEG,SAApC;AAA+C,QAAA,UAAU,EAAE,KAAKK,KAAL,CAAWW,UAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEf,UAArC;AAAiD,QAAA,UAAU,EAAE,KAAKI,KAAL,CAAWW,UAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,SAAnB;AAA6B,QAAA,SAAS,EAAEd,aAAxC;AAAuD,QAAA,UAAU,EAAE,KAAKG,KAAL,CAAWW,UAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADD,CADF,CADF;AAYA;AA1DH;;AAAA;AAAA,EAAyB3C,SAAzB;AA6DA,eAAe+B,GAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { Component } from 'react';\r\n/*\r\nUSE ENVIRONMENTAL VARIABLES TO HIDE IN THE FUTURE\r\n*/\r\nimport { View, Text } from 'react-native'\r\nimport firebase from 'firebase'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from './redux/reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD6BkglJA3KJ4kRaiqCR9V-SSr1JXTUSKw\",\r\n  authDomain: \"app-project-7328c.firebaseapp.com\",\r\n  projectId: \"app-project-7328c\",\r\n  storageBucket: \"app-project-7328c.appspot.com\",\r\n  messagingSenderId: \"860281315244\",\r\n  appId: \"1:860281315244:web:68f400bc9c83874330e409\",\r\n  measurementId: \"G-6DY6W4MMSR\"\r\n};\r\n\r\nif(firebase.apps.length === 0) {\r\n  firebase.initializeApp(firebaseConfig)\r\n\r\n}\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport LandingScreen from './components/auth/Landing'\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport RegisterScreen from './components/auth/Register'\r\nimport LoginScreen from './components/auth/Login'\r\nimport MainScreen from './components/main'\r\n\r\nimport FeedScreen from './components/main/Feed'\r\nimport ProfileScreen from './components/main/Profile'\r\nimport AddScreen from './components/main/Add'\r\nimport SaveScreen from './components/main/Save'\r\nimport CommentScreen from './components/main/Comment'\r\n\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport class App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      loaded: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if(!user){\r\n        this.setState({\r\n          loggedIn: false,\r\n          loaded: true,\r\n        })\r\n      } else {\r\n        this.setState({\r\n          loggedIn: true,\r\n          loaded: true,\r\n        })\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    const { loggedIn, loaded } = this.state;\r\n    if(!loaded) {\r\n      return(\r\n        <View style={{ flex: 1, justifyContent: 'center' }}>\r\n          <Text>Loading</Text>\r\n        </View>\r\n\r\n      )\r\n    }\r\n\r\n    if(!loggedIn){\r\n    return (\r\n        <NavigationContainer>\r\n            <Stack.Navigator initialRouteName=\"Landing\">\r\n              <Stack.Screen name=\"Landing\" component={LandingScreen} options={{ headerShown: false }}/>\r\n              <Stack.Screen name=\"Register\" component={RegisterScreen}/>\r\n              <Stack.Screen name=\"Login\" component={LoginScreen}/>\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n      );\r\n   }\r\n\r\n   return (\r\n     <Provider store={store}>\r\n       <NavigationContainer>\r\n        <Stack.Navigator initialRouteName=\"Main\">\r\n            <Stack.Screen name=\"Main\" component={MainScreen} />\r\n            <Stack.Screen name=\"Add\" component={AddScreen} navigation={this.props.navigation} />\r\n            <Stack.Screen name=\"Save\" component={SaveScreen} navigation={this.props.navigation}  />\r\n            <Stack.Screen name=\"Comment\" component={CommentScreen} navigation={this.props.navigation}  />\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n     </Provider>\r\n   )\r\n  }\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}