{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated, { useAnimatedStyle, useSharedValue, withTiming, interpolate } from 'react-native-reanimated';\n\nvar Indicator = function Indicator(_ref) {\n  var indexDecimal = _ref.indexDecimal,\n      itemsLayout = _ref.itemsLayout,\n      style = _ref.style,\n      _ref$fadeIn = _ref.fadeIn,\n      fadeIn = _ref$fadeIn === void 0 ? false : _ref$fadeIn;\n  var opacity = useSharedValue(fadeIn ? 0 : 1);\n  var stylez = useAnimatedStyle(function () {\n    var _itemsLayout$;\n\n    var transform = itemsLayout.length > 1 ? [{\n      translateX: interpolate(indexDecimal.value, itemsLayout.map(function (_, i) {\n        return i;\n      }), itemsLayout.map(function (v) {\n        return v.x;\n      }))\n    }] : undefined;\n    var width = itemsLayout.length > 1 ? interpolate(indexDecimal.value, itemsLayout.map(function (_, i) {\n      return i;\n    }), itemsLayout.map(function (v) {\n      return v.width;\n    })) : (_itemsLayout$ = itemsLayout[0]) === null || _itemsLayout$ === void 0 ? void 0 : _itemsLayout$.width;\n    return {\n      transform: transform,\n      width: width,\n      opacity: withTiming(opacity.value)\n    };\n  }, [indexDecimal, itemsLayout]);\n  React.useEffect(function () {\n    if (fadeIn) {\n      opacity.value = 1;\n    }\n  }, [fadeIn]);\n  return React.createElement(Animated.View, {\n    style: [stylez, styles.indicator, style]\n  });\n};\n\nvar styles = StyleSheet.create({\n  indicator: {\n    height: 2,\n    backgroundColor: '#2196f3',\n    position: 'absolute',\n    bottom: 0\n  }\n});\nexport { Indicator };","map":{"version":3,"sources":["Indicator.tsx"],"names":["Indicator","fadeIn","opacity","useSharedValue","stylez","useAnimatedStyle","transform","translateX","interpolate","indexDecimal","itemsLayout","v","width","withTiming","React","styles","indicator","height","backgroundColor","position","bottom"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA;;AAEA,OAAA,QAAA,IAAA,gBAAA,EAAA,cAAA,EAAA,UAAA,EAAA,WAAA,QAAA,yBAAA;;AASA,IAAMA,SAAmC,GAAG,SAAtCA,SAAsC,OAKtC;AAAA,MALuC,YAKvC,QALuC,YAKvC;AAAA,MALuC,WAKvC,QALuC,WAKvC;AAAA,MALuC,KAKvC,QALuC,KAKvC;AAAA,yBADJC,MACI;AAAA,MADJA,MACI,4BADK,KACL;AACJ,MAAMC,OAAO,GAAGC,cAAc,CAACF,MAAM,GAAA,CAAA,GAArC,CAA8B,CAA9B;AAEA,MAAMG,MAAM,GAAGC,gBAAgB,CAAC,YAAM;AAAA,QAAA,aAAA;;AACpC,QAAMC,SAAS,GACb,WAAW,CAAX,MAAA,GAAA,CAAA,GACI,CACE;AACEC,MAAAA,UAAU,EAAEC,WAAW,CACrBC,YAAY,CADS,KAAA,EAErBC,WAAW,CAAXA,GAAAA,CAAgB,UAAA,CAAA,EAAA,CAAA;AAAA,eAFK,CAEL;AAAA,OAAhBA,CAFqB,EAGrBA,WAAW,CAAXA,GAAAA,CAAiBC,UAAAA,CAAD;AAAA,eAAOA,CAAC,CAHH,CAGL;AAAA,OAAhBD,CAHqB;AADzB,KADF,CADJ,GADF,SAAA;AAaA,QAAME,KAAK,GACTF,WAAW,CAAXA,MAAAA,GAAAA,CAAAA,GACIF,WAAW,CACTC,YAAY,CADH,KAAA,EAETC,WAAW,CAAXA,GAAAA,CAAgB,UAAA,CAAA,EAAA,CAAA;AAAA,aAFP,CAEO;AAAA,KAAhBA,CAFS,EAGTA,WAAW,CAAXA,GAAAA,CAAiBC,UAAAA,CAAD;AAAA,aAAOA,CAAC,CAJ9BD,KAIsB;AAAA,KAAhBA,CAHS,CADfA,GAAAA,CAAAA,aAAAA,GAMIA,WAAW,CANfA,CAMe,CANfA,MAAAA,IAAAA,IAAAA,aAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAMIA,aAAAA,CAPN,KAAA;AASA,WAAO;AACLJ,MAAAA,SADK,EACLA,SADK;AAELM,MAAAA,KAFK,EAELA,KAFK;AAGLV,MAAAA,OAAO,EAAEW,UAAU,CAACX,OAAO,CAAR,KAAA;AAHd,KAAP;AAvB6B,GAAA,EA4B5B,CAAA,YAAA,EA5BH,WA4BG,CA5B4B,CAA/B;AA8BAY,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpB,QAAA,MAAA,EAAY;AACVZ,MAAAA,OAAO,CAAPA,KAAAA,GAAAA,CAAAA;AAFkB;AAAtBY,GAAAA,EAKG,CALHA,MAKG,CALHA;AAOA,SAAO,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA;AAAe,IAAA,KAAK,EAAE,CAAA,MAAA,EAASC,MAAM,CAAf,SAAA,EAAA,KAAA;AAAtB,GAAA,CAAP;AA7CF,CAAA;;AAgDA,IAAMA,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EADG,CAAA;AAETC,IAAAA,eAAe,EAFN,SAAA;AAGTC,IAAAA,QAAQ,EAHC,UAAA;AAITC,IAAAA,MAAM,EAAE;AAJC;AADoB,CAAlB,CAAf;AASA,SAAA,SAAA","sourcesContent":["import React from 'react'\nimport { StyleSheet } from 'react-native'\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n  interpolate,\n} from 'react-native-reanimated'\n\nimport { IndicatorProps } from './types'\n\nconst Indicator: React.FC<IndicatorProps> = ({\n  indexDecimal,\n  itemsLayout,\n  style,\n  fadeIn = false,\n}) => {\n  const opacity = useSharedValue(fadeIn ? 0 : 1)\n\n  const stylez = useAnimatedStyle(() => {\n    const transform =\n      itemsLayout.length > 1\n        ? [\n            {\n              translateX: interpolate(\n                indexDecimal.value,\n                itemsLayout.map((_, i) => i),\n                itemsLayout.map((v) => v.x)\n              ),\n            },\n          ]\n        : undefined\n\n    const width =\n      itemsLayout.length > 1\n        ? interpolate(\n            indexDecimal.value,\n            itemsLayout.map((_, i) => i),\n            itemsLayout.map((v) => v.width)\n          )\n        : itemsLayout[0]?.width\n\n    return {\n      transform,\n      width,\n      opacity: withTiming(opacity.value),\n    }\n  }, [indexDecimal, itemsLayout])\n\n  React.useEffect(() => {\n    if (fadeIn) {\n      opacity.value = 1\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fadeIn])\n\n  return <Animated.View style={[stylez, styles.indicator, style]} />\n}\n\nconst styles = StyleSheet.create({\n  indicator: {\n    height: 2,\n    backgroundColor: '#2196f3',\n    position: 'absolute',\n    bottom: 0,\n  },\n})\n\nexport { Indicator }\n"]},"metadata":{},"sourceType":"module"}