{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\downloads\\\\PersonalProject\\\\ReactApp\\\\ReactApp\\\\frontend\\\\components\\\\main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from \"../redux/actions/index\";\nimport FeedScreen from \"./main/Feed\";\nimport AddScreen from \"./main/Add\";\nimport ProfileScreen from \"./main/Profile\";\nimport SearchScreen from \"./main/Search\";\nimport firebase from 'firebase';\nvar Tab = createMaterialBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var main = function (_Component) {\n  _inherits(main, _Component);\n\n  var _super = _createSuper(main);\n\n  function main() {\n    _classCallCheck(this, main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.clearData();\n      this.props.fetchUser();\n      this.props.fetchUserPosts();\n      this.props.fetchUserFollowing();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        intialRoutename: \"Feed\",\n        labeled: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Search\",\n        component: SearchScreen,\n        navigation: this.props.navigation,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"magnify\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"AddContainer\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref3) {\n          var navigation = _ref3.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        listeners: function listeners(_ref5) {\n          var navigation = _ref5.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Profile\", {\n                uid: firebase.auth().currentUser.uid\n              });\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color,\n                size = _ref6.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 14\n        }\n      }));\n    }\n  }]);\n\n  return main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    fetchUserPosts: fetchUserPosts,\n    fetchUserFollowing: fetchUserFollowing,\n    clearData: clearData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(main);","map":{"version":3,"sources":["D:/downloads/PersonalProject/ReactApp/ReactApp/frontend/components/main.js"],"names":["React","Component","createMaterialBottomTabNavigator","MaterialCommunityIcons","connect","bindActionCreators","fetchUser","fetchUserPosts","fetchUserFollowing","clearData","FeedScreen","AddScreen","ProfileScreen","SearchScreen","firebase","Tab","EmptyScreen","main","props","tabBarIcon","color","size","navigation","tabPress","event","preventDefault","navigate","uid","auth","currentUser","mapStateToProps","store","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from '../redux/actions/index'\r\n \r\nimport FeedScreen from './main/Feed'\r\nimport AddScreen from './main/Add'\r\nimport ProfileScreen from './main/Profile'\r\nimport SearchScreen from './main/Search'\r\nimport firebase from 'firebase';\r\n\r\nconst Tab = createMaterialBottomTabNavigator();\r\n\r\nconst EmptyScreen = () => {\r\n    return(null)\r\n}\r\n\r\nexport class main extends Component {\r\n    componentDidMount(){\r\n        this.props.clearData();\r\n        this.props.fetchUser();\r\n        this.props.fetchUserPosts();\r\n        this.props.fetchUserFollowing();\r\n    }\r\n    render() {\r\n        return (\r\n        <Tab.Navigator intialRoutename=\"Feed\" labeled={false}>\r\n            <Tab.Screen name=\"Feed\" component={FeedScreen} \r\n                options={{\r\n                    tabBarIcon: ({ color, size }) => (\r\n                        <MaterialCommunityIcons name=\"home\" color={color} size={26}/>\r\n                    ),\r\n                }}/>\r\n            <Tab.Screen name=\"Search\" component={SearchScreen} navigation={this.props.navigation}\r\n                options={{\r\n                    tabBarIcon: ({ color, size }) => (\r\n                        <MaterialCommunityIcons name=\"magnify\" color={color} size={26}/>\r\n                    ),\r\n                }}/>\r\n             <Tab.Screen name=\"AddContainer\" component={EmptyScreen} \r\n                listeners={({ navigation }) => ({\r\n                    tabPress: event => {\r\n                        event.preventDefault();\r\n                        navigation.navigate(\"Add\")\r\n\r\n                    }\r\n                })}\r\n                options={{\r\n                    tabBarIcon: ({ color, size }) => (\r\n                        <MaterialCommunityIcons name=\"plus-box\" color={color} size={26}/>\r\n                    ),\r\n                    }}/>\r\n             <Tab.Screen name=\"Profile\" component={ProfileScreen} \r\n                listeners={({ navigation }) => ({\r\n                        tabPress: event => {\r\n                        event.preventDefault();\r\n                        navigation.navigate(\"Profile\", {uid:firebase.auth().currentUser.uid})\r\n            \r\n                     }})}\r\n                options={{\r\n                    tabBarIcon: ({ color, size }) => (\r\n                        <MaterialCommunityIcons name=\"account-circle\" color={color} size={26}/>\r\n                    ),\r\n                }}/>\r\n        </Tab.Navigator>\r\n      \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store) => ({\r\n    currentUser: store.userState.currentUser\r\n\r\n})\r\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUser, fetchUserPosts, fetchUserFollowing, clearData }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(main);\r\n"]},"metadata":{},"sourceType":"module"}