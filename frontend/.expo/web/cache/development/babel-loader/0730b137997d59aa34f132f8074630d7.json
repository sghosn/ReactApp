{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\", \"index\", \"onPress\", \"onLayout\", \"scrollEnabled\", \"indexDecimal\", \"label\", \"style\", \"labelStyle\", \"activeColor\", \"inactiveColor\", \"inactiveOpacity\", \"pressColor\", \"pressOpacity\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Animated, { interpolate, useAnimatedStyle } from 'react-native-reanimated';\nexport var TABBAR_HEIGHT = 48;\nvar DEFAULT_COLOR = 'rgba(0, 0, 0, 1)';\nexport var MaterialTabItem = function MaterialTabItem(_ref) {\n  var name = _ref.name,\n      index = _ref.index,\n      _onPress = _ref.onPress,\n      onLayout = _ref.onLayout,\n      scrollEnabled = _ref.scrollEnabled,\n      indexDecimal = _ref.indexDecimal,\n      label = _ref.label,\n      _style = _ref.style,\n      labelStyle = _ref.labelStyle,\n      _ref$activeColor = _ref.activeColor,\n      activeColor = _ref$activeColor === void 0 ? DEFAULT_COLOR : _ref$activeColor,\n      _ref$inactiveColor = _ref.inactiveColor,\n      inactiveColor = _ref$inactiveColor === void 0 ? DEFAULT_COLOR : _ref$inactiveColor,\n      _ref$inactiveOpacity = _ref.inactiveOpacity,\n      inactiveOpacity = _ref$inactiveOpacity === void 0 ? 0.7 : _ref$inactiveOpacity,\n      _ref$pressColor = _ref.pressColor,\n      pressColor = _ref$pressColor === void 0 ? '#DDDDDD' : _ref$pressColor,\n      _ref$pressOpacity = _ref.pressOpacity,\n      pressOpacity = _ref$pressOpacity === void 0 ? Platform.OS === 'ios' ? 0.2 : 1 : _ref$pressOpacity,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var stylez = useAnimatedStyle(function () {\n    return {\n      opacity: interpolate(indexDecimal.value, [index - 1, index, index + 1], [inactiveOpacity, 1, inactiveOpacity], Animated.Extrapolate.CLAMP),\n      color: Math.abs(index - indexDecimal.value) < 0.5 ? activeColor : inactiveColor\n    };\n  });\n  return React.createElement(Pressable, _extends({\n    onLayout: onLayout,\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return [{\n        opacity: pressed ? pressOpacity : 1\n      }, !scrollEnabled && styles.grow, styles.item, _style];\n    },\n    onPress: function onPress() {\n      return _onPress(name);\n    },\n    android_ripple: {\n      borderless: true,\n      color: pressColor\n    }\n  }, rest), React.createElement(Animated.Text, {\n    style: [styles.label, stylez, labelStyle]\n  }, label));\n};\nvar styles = StyleSheet.create({\n  grow: {\n    flex: 1\n  },\n  item: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 10,\n    height: TABBAR_HEIGHT\n  },\n  label: {\n    margin: 4\n  }\n});","map":{"version":3,"sources":["TabItem.tsx"],"names":["TABBAR_HEIGHT","DEFAULT_COLOR","MaterialTabItem","activeColor","inactiveColor","inactiveOpacity","pressColor","pressOpacity","Platform","rest","stylez","useAnimatedStyle","opacity","interpolate","indexDecimal","index","Animated","color","Math","pressed","styles","onPress","borderless","grow","flex","item","alignItems","justifyContent","paddingHorizontal","height","label","margin"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyleSheet, Pressable, Platform } from 'react-native'\nimport Animated, {\n  interpolate,\n  useAnimatedStyle,\n} from 'react-native-reanimated'\n\nimport { TabName } from '../types'\nimport { MaterialTabItemProps } from './types'\n\nexport const TABBAR_HEIGHT = 48\nconst DEFAULT_COLOR = 'rgba(0, 0, 0, 1)'\n\n/**\n * Any additional props are passed to the pressable component.\n */\nexport const MaterialTabItem = <T extends TabName = any>({\n  name,\n  index,\n  onPress,\n  onLayout,\n  scrollEnabled,\n  indexDecimal,\n  label,\n  style,\n  labelStyle,\n  activeColor = DEFAULT_COLOR,\n  inactiveColor = DEFAULT_COLOR,\n  inactiveOpacity = 0.7,\n  pressColor = '#DDDDDD',\n  pressOpacity = Platform.OS === 'ios' ? 0.2 : 1,\n  ...rest\n}: MaterialTabItemProps<T>): React.ReactElement => {\n  const stylez = useAnimatedStyle(() => {\n    return {\n      opacity: interpolate(\n        indexDecimal.value,\n        [index - 1, index, index + 1],\n        [inactiveOpacity, 1, inactiveOpacity],\n        Animated.Extrapolate.CLAMP\n      ),\n      color:\n        Math.abs(index - indexDecimal.value) < 0.5\n          ? activeColor\n          : inactiveColor,\n    }\n  })\n\n  return (\n    <Pressable\n      onLayout={onLayout}\n      style={({ pressed }) => [\n        { opacity: pressed ? pressOpacity : 1 },\n        !scrollEnabled && styles.grow,\n        styles.item,\n        style,\n      ]}\n      onPress={() => onPress(name)}\n      android_ripple={{\n        borderless: true,\n        color: pressColor,\n      }}\n      {...rest}\n    >\n      <Animated.Text style={[styles.label, stylez, labelStyle]}>\n        {label}\n      </Animated.Text>\n    </Pressable>\n  )\n}\n\nconst styles = StyleSheet.create({\n  grow: {\n    flex: 1,\n  },\n  item: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 10,\n    height: TABBAR_HEIGHT,\n  },\n  label: {\n    margin: 4,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}